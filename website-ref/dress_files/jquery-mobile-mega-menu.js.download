/*!

jQuery Plugin Mobile Mega Menu
Blake Cerecero
Blake@DigitalBlake.com
http://DigitalBlake.com
@blakecerecero

*/
'use strict';

(function($) {
    jQuery.fn.extend({

        // Plugin Name
        mobileMegaMenu: function(options) {

            // Defaults options are set here
            // Every default goes within the { } brackets as seen below
            // A comma separates the different values
            var defaults = {
                changeToggleText: false,
                enableWidgetRegion: false,
                prependCloseButton: false,
                toogleTextOnClose: 'Close Menu',
                menuToggle: 'toggle-menu'
            };

            var settings = $.extend(defaults, options);

            return this.each(function() {
                /* ------------------------- Plugin Starts Here ------------------------- */

                /* Variables */
                var animationSpeed = 250, // Change SCSS to match this speed
                    closeButton = '<li><a class="close-button ' + settings.menuToggle + '" href="#">Close Menu</a></li>',
                    maxHeight = -1;

                var $menuRoot = $(this), // Root of Mobile Mega Menu
                    $menuContainer = $('#mobile-navigation'), // Selector for Menu container
                    $currentText = $('a.' + settings.menuToggle).html(), // Existing text of menu toggle
                    $menuSelect = $('.js-menu-select');

                // Prevent menu from initialising more than once
                if ($menuRoot.hasClass('menu-init')) {
                    return;
                }

                $menuRoot.addClass('menu-init');

                var offersInclude = $('.mobile-category-offers-include');

                offersInclude.each(function() {
                    var offers = $(this).parents('li').find('.category-offer-slot').html();
                    $(this).prepend(offers);
                });

                /* ------------------------- Add next button to main menu items with sub menus and add back button to top of every sub ul after the root */
                $menuRoot.find('ul a').addClass('menu-item');
                $menuRoot.find('ul ul').before().siblings('a:first-of-type').parent('li').not('.link-tab').find('> a').addClass('has-next-button');

                /* ------------------------- Prepend Close Button  */
                if (settings.prependCloseButton) {
                    $menuRoot.find('ul').closest('ul').prepend(closeButton);
                }

                /* Variables */
                var $toggleMenu = $('a.' + settings.menuToggle), // DOM Search for Menu Toggle
                    $nextAction = $menuRoot.find('a.has-next-button'), // DOM Search for Next Button
                    $backAction = $menuRoot.find('a.back-button'); // DOM Search for Back Button

                /* ------------------------- Generate and move Widget Region */
                if (settings.enableWidgetRegion) {
                    var widgets = $menuRoot.find('.widget-region').detach();
                    $menuRoot.find('ul:first').append(widgets);
                }

                $(".nav-offers").each(function() {
                    var backButton = $(this).find('.back-button');
                    if (backButton.length > 0) {
                        $(this).find('.back-button:gt(0)').hide();
                    }
                });

                /* ------------------------- Set a variable to calculate height of the tallest ul in the menu, then set that height as the min-height of the menu container */
                var subLists = $menuRoot.find('ul');
                var resizeTimer;

                // use setTimeout to prevent function call on every pixel resize
                // for better performance
                $(window).resize(function() {
                    clearTimeout(resizeTimer);

                    resizeTimer = setTimeout(function() {
                        min_el_height();
                    }, 500);
                });

                function min_el_height() {
                    subLists.toArray().forEach(function(element) {
                        maxHeight = maxHeight > $(element).height() ? maxHeight : $(element).height();
                    });
                }

                min_el_height(); // call function once on initialization

                /* ------------------------- Actions ------------------------- */

                /* ------------------------- Open Menu ------------------------- */
                $toggleMenu.on('click', function(event) {
                    event.preventDefault();
                    /* When the menu is first opened give the first ul its is-in-view class */
                    if (!$menuRoot.find('ul:first-child').hasClass('has-been-viewed')) {
                        $menuRoot.find('ul:first-child').toggleClass('is-in-view');
                    }

                    /* Change text when the menu is open to show the option to close the menu */
                    if (settings.changeToggleText) {
                        if (!$menuRoot.hasClass('open')) {
                            $('a.' + settings.menuToggle).html(settings.toogleTextOnClose);
                        } else if ($menuRoot.hasClass('open')) {
                            $('a.' + settings.menuToggle).html($currentText);
                        }
                    }

                    /* Open menu by adding open class and removing hidden, reverse on close */
                    $menuRoot.toggleClass('open');

                }); /* End a.toggle-menu */

                /* ------------------------- Next Button ------------------------- */
                $nextAction.on('click', function(event) {
                    var navLevel = $(this).siblings('ul:first-of-type').attr('nav-level');

                    event.preventDefault();
                    $menuContainer.scrollTop(0);

                    /* Set is-in-view class for current ul and only that ul */
                    $(this).siblings('ul:first-of-type').addClass('is-in-view');
                    /* Once the sub ul is visible we hide other sibling uls so that they do not appear above the is-in-view ul */
                    $(this).parents().siblings('li').find('ul').hide();
                    /*hide all tabs on that level*/
                    $(this).parents('ul.is-in-view').find('[nav-level="' + navLevel + '"]').hide();
                    /* If we use the back button and decide to go into another submenu we need to bring back the hidden sibling uls */
                    $(this).siblings('ul').show();
                    /* Once we go in a level we remove the is-in-view class and add the has-been-viewed class, this allows for the slide off animation and the slide in animations  */
                    var $hasBeenViewed = $(this).closest('ul');
                    $hasBeenViewed.addClass('has-been-viewed').removeClass('is-in-view');
                    setTimeout(function() {
                        $hasBeenViewed.addClass('transitioned');
                    }, 300);
                    /* hide previous level links to limit scroll length on level in view */
                    $(this).parents('.menu-vertical').siblings('.menu-vertical').hide();

                    if ($menuSelect.length > 0) {
                        $menuSelect.addClass('hidden');
                    }
                });

                /* ------------------------- Back Button ------------------------- */
                $backAction.on('click', function(event) {
                    event.preventDefault();

                    // Reset the scrollTop of the containing menu to prevent menu being cut off
                    $menuContainer.scrollTop(0);

                    /* As we traverse back up the menu we reset the previous menu item from has-been-viewed to the is-in-view class.
                    Bringing back the slide in and slide off aniamtions. Once the animation is complete we go back down the DOM and remove the previous is-in-view ul class
                    and hide the ul to prevent scrolling bugs */
                    $(this).parents('.is-in-view').closest('ul.has-been-viewed').toggleClass('has-been-viewed is-in-view').removeClass('transitioned').promise().done(function() {
                        $menuRoot.find('ul.is-in-view ul.is-in-view').toggleClass('is-in-view').hide();
                        $menuRoot.find('.is-in-view .menu-vertical').show();

                        // If visible submenu is the top level, show the menu select options
                        if ($menuSelect.length > 0 && $menuRoot.find('.is-in-view').hasClass('menu-category')) {
                            $menuSelect.removeClass('hidden');
                        }
                    });
                });

                /* ------------------------- Modernizer: For when css animations are not supported ------------------------- */
                if ($('html').hasClass('no-csstransforms') || $('html').hasClass('no-cssanimations')) {

                    /* Toggle Menu */
                    $toggleMenu.on('click', function(event) {
                        event.preventDefault();

                        $menuRoot.css('transform', 'none');

                        if ($menuRoot.hasClass('open')) {
                            $menuRoot.animate({
                                left: 0
                            });
                        } else {
                            $menuRoot.animate({
                                left: '-100%'
                            });
                        }

                    });

                    /* Next */
                    $nextAction.on('click', function(event) {
                        event.preventDefault();

                        $menuRoot.find('.has-been-viewed').css('transform', 'none');

                        $menuRoot.find('ul').animate({
                            right: '+=100%'
                        }, animationSpeed);
                    });

                    /* Back */
                    $backAction.on('click', function(event) {
                        event.preventDefault();

                        $menuRoot.find('.has-been-viewed').css('transform', 'none');

                        $menuRoot.find('ul').animate({
                            right: '-=100%'
                        }, animationSpeed);
                    });

                } /* End Modernizer */

            }); // End this.each / End Plugin

        } // End mobileMegaMenu

    }); // End jQuery.fn.extend

}(jQuery)); // End function
